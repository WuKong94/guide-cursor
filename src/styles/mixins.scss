@use 'variables' as *;

// 响应式混合器
@mixin mobile {
  @media (max-width: #{$tablet - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet}) and (max-width: #{$desktop - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop}) {
    @content;
  }
}

@mixin desktop-lg {
  @media (min-width: #{$desktop-lg}) {
    @content;
  }
}

// Flexbox 混合器
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-column-center {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

// 文字处理混合器
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// 按钮样式混合器
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $spacing-md $spacing-xl;
  border: none;
  border-radius: $radius-lg;
  font-family: $font-primary;
  font-weight: 500;
  text-decoration: none;
  cursor: pointer;
  transition: all $duration-normal $ease-in-out;
  position: relative;
  overflow: hidden;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-primary {
  @include button-base;
  background: $gradient-red;
  color: white;
  box-shadow: $shadow-md;

  &:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }

  &:active {
    transform: translateY(0);
  }
}

@mixin button-secondary {
  @include button-base;
  background: $gradient-gold;
  color: $dark-ink;
  box-shadow: $shadow-md;

  &:hover:not(:disabled) {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

@mixin button-outline {
  @include button-base;
  background: transparent;
  color: $primary-red;
  border: 2px solid $primary-red;

  &:hover:not(:disabled) {
    background: $primary-red;
    color: white;
  }
}

// 卡片样式混合器
@mixin card-base {
  background: white;
  border-radius: $radius-xl;
  box-shadow: $shadow-md;
  overflow: hidden;
  transition: all $duration-normal $ease-in-out;
}

@mixin card-hover {
  &:hover {
    transform: translateY(-8px);
    box-shadow: $shadow-xl;
  }
}

// 动画混合器
@mixin fade-in($duration: $duration-slow) {
  animation: fadeIn $duration $ease-out;
}

@mixin slide-up($duration: $duration-slow) {
  animation: slideUp $duration $ease-out;
}

@mixin scale-in($duration: $duration-normal) {
  animation: scaleIn $duration $ease-out;
}

// 渐变混合器
@mixin gradient-text($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

// 容器混合器
@mixin container {
  width: 100%;
  max-width: $desktop-xl;
  margin: 0 auto;
  padding: 0 $spacing-md;

  @include tablet {
    padding: 0 $spacing-xl;
  }

  @include desktop {
    padding: 0 $spacing-2xl;
  }
}

// 网格布局混合器
@mixin grid-auto-fit($min-width: 300px, $gap: $spacing-xl) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  gap: $gap;
}

// 背景图片混合器
@mixin bg-cover {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

// 绝对定位居中混合器
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 视差滚动混合器
@mixin parallax {
  background-attachment: fixed;
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
} 